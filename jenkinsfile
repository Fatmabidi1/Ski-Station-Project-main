pipeline {
    agent any
    environment {
        SNAP_REPO = 'ski_snapshot'
        BRANCH_NAME= 'master'
        NEXUS_USER = 'admin'
        NEXUS_PASS = 'admin'
        RELEASE_REPO = 'ski_release'
        CENTRAL_REPO = 'ski_proxy'
        NEXUS_IP = '172.17.0.3'
        NEXUS_PORT = '8081'
        NEXUS_GRP_REPO = 'ski_group'
        NEXUS_LOGIN = 'nexus'
        
    }
    stages {
        stage('Checkout GIT') {
            steps {
                echo 'pulling ...';
                git branch: 'master',
                url: 'https://github.com/Fatmabidi1/Ski-Station-Project-main.git'
            }
        }
stage('Build') {
            steps {
                    withMaven(maven: 'maven'){
             sh 'mvn clean package'
             
        }

                
                 
                
            }

        }
stage('sonarqube test') {
            steps {
               withSonarQubeEnv('sonar') {
                    withMaven(maven: 'maven'){
                    sh 'mvn sonar:sonar'
                   }
                }
            }
        }
         stage("Quality gate") {
            steps {
                waitForQualityGate abortPipeline: true
            }
        }
stage ("Upload Artifact") {
            steps {
                nexusArtifactUploader(
                  nexusVersion: 'nexus3',
                  protocol: 'http',
                  nexusUrl: "${NEXUS_IP}:${NEXUS_PORT}",  
                  groupId: 'QA',
                  version: "${env.BUILD_ID}-${env.BUILD_TIMESTAMP}",
                  repository: "${RELEASE_REPO}",
                  credentialsId: "${NEXUS_LOGIN}", 
                  artifacts: [
                    [artifactId: 'skiApp',
                     classifier: '',
                     file: 'target/SkiStationProject-0.0.1-SNAPSHOT.jar',
                     type: 'jar']
                  ]
                )
            }
        }

      
    }
}
